The plugin provides some base classes for page objects. These can be used as-is for simple scenarios, extended (or ignored completely of course). All the classes are in the @grails.plugins.selenium.pageobjects@ package. Refer to the API documentation for more details.

* @Page@ is the root of the page object heirarchy. It provides no-arg and URL-based constructors and the abstract _verifyPage_ method.
* @GrailsListPage@ represents a scaffolded _list_ page and provides easy access to data in a list table, access to the pagination controls, etc.
* @GrailsShowPage@ represents a scaffolded _show_ page and provides property access to data in a typical _show_ page.
* @GrailsCreatePage@ and @GrailsEditPage@ represent scaffolded _create_ and _edit_ pages and translate @page.field = "value"@ type calls to Selenium commands that type in form fields.
* @UnexpectedPageException@ is an exception class thrown when a page object is constructed but the browser is not on the correct page.
